// <auto-generated />
using CityInfo.Api.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfo.Migrations
{
    [DbContext(typeof(CityInfoDbContext))]
    partial class CityInfoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CityInfo.Api.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The one with big park",
                            Name = "New York City"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The one with big cathedral that was never finished",
                            Name = "Antwarp"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The one with big tower",
                            Name = "Paris"
                        });
                });

            modelBuilder.Entity("CityInfo.Api.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "A symbol of freedom",
                            Name = "Statue of Liberty"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "An iconic urban park",
                            Name = "Central Park"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "An impressive Gothic cathedral",
                            Name = "Cathedral of Our Lady"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "One of the oldest zoos in the world",
                            Name = "Antwerp Zoo"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "Iconic iron lattice tower",
                            Name = "Eiffel Tower"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Description = "World's largest art museum",
                            Name = "Louvre Museum"
                        });
                });

            modelBuilder.Entity("CityInfo.Api.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInfo.Api.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfo.Api.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
